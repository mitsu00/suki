version: 2.1
workflows:
  main:
    jobs:
      - build
jobs:
  build:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - run:
          name: "Dependency Install"
          command: |
            sudo apt update
            sudo apt install -y openssh-server screen python3 git openjdk-8-jdk android-tools-adb bc \
            bison build-essential curl flex g++-multilib gcc-multilib gnupg gperf imagemagick \
            lib32ncurses-dev lib32readline-dev lib32z1-dev  liblz4-tool libncurses5-dev libsdl1.2-dev \
            libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
            yasm zip zlib1g-dev libtinfo5 libncurses5
      - run:
          name: "Sync"
          command: |
            cd ~
            mkdir ~/.bin
            curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
            chmod a+x ~/.bin/repo
            echo "export PATH=~/bin:$PATH" >> ~/.bashrc
            # Clone the Sync Repo
            # Initialize local repository
            cd ~
            repo init --depth=1 --no-repo-verify -u https://github.com/alphadroid-project/manifest -b alpha-13 --git-lfs -g default,-mips,-darwin,-notdefault
            git clone https://github.com/mitsu00/local_manifest.git --depth 1 -b alpha .repo/local_manifests
            repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync --fail-fast -j$(nproc --all)
      - run:
          name: "build"
          command: |
            echo " Test Build "
            df -h
            echo " - "
            pwd
            cd ~
            ls
            pwd
            . build/envsetup.sh
            export WITH_GAPPS=0
            export ALPHA_MAINTAINER=ozipoetra
            export ALPHA_BUILD_TYPE=Community
            export ALLOW_MISSING_DEPENDENCIES=true
            export BUILD_USERNAME=ozipoetra
            export BUILD_HOSTNAME=ozip.my.id
            export TZ=Asia/Jakarta
            lunch lineage_merlinx-user
            mka sepolicy
            mka bootimage
            mka init